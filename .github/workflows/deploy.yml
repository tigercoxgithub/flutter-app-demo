name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test
      
    - name: Build for production (main branch)
      if: github.ref == 'refs/heads/main'
      run: flutter build web --release
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL_PROD }}
        ANALYTICS_ID: ${{ secrets.ANALYTICS_ID_PROD }}
        DEBUG_MODE: false
        
    - name: Build for preview (other branches)
      if: github.ref != 'refs/heads/main'
      run: flutter build web --debug
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL_STAGING }}
        ANALYTICS_ID: ${{ secrets.ANALYTICS_ID_STAGING }}
        DEBUG_MODE: true
        
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: flutter-app-demo
        directory: build/web
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha,
          });
          
          if (deployments.length > 0) {
            const deployment = deployments[0];
            const previewUrl = `https://${deployment.sha.substring(0, 8)}.flutter-app-demo.pages.dev`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment ready!\n\n**Preview URL:** ${previewUrl}\n\n**Branch:** ${context.payload.pull_request.head.ref}\n**Commit:** ${context.payload.pull_request.head.sha.substring(0, 8)}`
            });
          }
